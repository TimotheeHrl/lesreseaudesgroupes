{"version":3,"sources":["../../../server/lib/utils.ts"],"names":["printAndExit","message","code","console","log","error","process","exit","getNodeOptionsWithoutInspect","NODE_INSPECT_RE","env","NODE_OPTIONS","replace","getProjectRoot","dir","pkgJsonPath","cwd","Error"],"mappings":"+KAAA,0EACA,0B,mFAEO,QAASA,CAAAA,YAAT,CAAsBC,OAAtB,CAAuCC,IAAI,CAAG,CAA9C,CAAiD,CACtD,GAAIA,IAAI,GAAK,CAAb,CAAgB,CACdC,OAAO,CAACC,GAAR,CAAYH,OAAZ,EACD,CAFD,IAEO,CACLE,OAAO,CAACE,KAAR,CAAcJ,OAAd,EACD,CAEDK,OAAO,CAACC,IAAR,CAAaL,IAAb,EACD,CAEM,QAASM,CAAAA,4BAAT,EAAwC,CAC7C,KAAMC,CAAAA,eAAe,CAAG,8BAAxB,CACA,MAAO,CAACH,OAAO,CAACI,GAAR,CAAYC,YAAZ,EAA4B,EAA7B,EAAiCC,OAAjC,CAAyCH,eAAzC,CAA0D,EAA1D,CAAP,CACD,CAEM,cAAeI,CAAAA,cAAf,CAA8BC,GAA9B,CAA2C,CAChD,KAAMC,CAAAA,WAAW,CAAG,KAAM,oBAAO,cAAP,CAAuB,CAAEC,GAAG,CAAEF,GAAP,CAAvB,CAA1B,CAEA,GAAI,CAACC,WAAL,CAAkB,CAChB,KAAM,IAAIE,CAAAA,KAAJ,CACJ,8DADI,CAAN,CAGD,CAED,MAAO,kBAAQF,WAAR,CAAP,CACD","sourcesContent":["import findUp from 'next/dist/compiled/find-up'\nimport { dirname } from 'path'\n\nexport function printAndExit(message: string, code = 1) {\n  if (code === 0) {\n    console.log(message)\n  } else {\n    console.error(message)\n  }\n\n  process.exit(code)\n}\n\nexport function getNodeOptionsWithoutInspect() {\n  const NODE_INSPECT_RE = /--inspect(-brk)?(=\\S+)?( |$)/\n  return (process.env.NODE_OPTIONS || '').replace(NODE_INSPECT_RE, '')\n}\n\nexport async function getProjectRoot(dir: string) {\n  const pkgJsonPath = await findUp('package.json', { cwd: dir })\n\n  if (!pkgJsonPath) {\n    throw new Error(\n      'Unable to find project root by looking for your package.json'\n    )\n  }\n\n  return dirname(pkgJsonPath)\n}\n"]}